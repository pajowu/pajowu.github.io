#!/usr/bin/env ruby

layout '/default.*', :erb

compile '/css/*.scss' do
  filter :sass, syntax: :scss
end

preprocess do
  sarticles_to_paginate = items.select { |i| i.identifier.to_s.start_with?("/blog/") and i[:extension] == "md"}
  sarticles_to_paginate.each do |item|
    item[:kind] = 'article'
  end
end

route %r{/_.+/$} do
  nil
end

route '/css/style.scss' do
  '/css/stylesheet.css'
end

compile '/blog/*.md' do
  filter :erb
  filter :kramdown
  layout '/post.*'
end

route '/blog/*' do
  slug = /([^\/]+).([^\/]+)/.match(item.identifier.without_ext).captures[1]

  "/blog/#{slug}.html"
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end


route '/**/*.{html,md}' do
  if item.identifier =~ '/index.*'

    '/index.html'
  else
    item.identifier.without_ext + '/index.html'
  end
end

compile '/index.md' do
  filter :erb
  filter :kramdown
  layout '/index.*'
end

compile '/footer.md' do
  filter :erb
  filter :kramdown
  layout '/footer.*'
  write '/footer.html'
end

compile '/blog.md' do
  filter :erb
  filter :kramdown
  layout '/blog_index.*'
  write '/blog/index.html'
end

compile '/**/*.md' do
  filter :erb
  filter :kramdown
  layout '/default.*'
end

compile '/**/*.html' do
  filter :erb
  layout '/default.*'
end

compile '/blog/feed.xml' do
  filter :erb
  write '/feed.xml'
end

route '/blog/feed' do
  '/blog/feed.xml'
end

compile '/**/*' do
  write item.identifier.to_s
end

compile '*' do
  if item.binary?
    # donâ€™t filter binary items
  else
    filter :erb
    layout 'default'
  end
end


layout '/**/*', :erb
